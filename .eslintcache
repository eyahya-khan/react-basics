[{"/Users/eyahyakhan/Desktop/react/basic-react/basic-react/src/index.js":"1","/Users/eyahyakhan/Desktop/react/basic-react/basic-react/src/App.js":"2","/Users/eyahyakhan/Desktop/react/basic-react/basic-react/src/components/notes.js":"3","/Users/eyahyakhan/Desktop/react/basic-react/basic-react/src/components/List.js":"4","/Users/eyahyakhan/Desktop/react/basic-react/basic-react/src/components/Editor.js":"5","/Users/eyahyakhan/Desktop/react/basic-react/basic-react/src/components/localStorage.js":"6","/Users/eyahyakhan/Desktop/react/basic-react/basic-react/src/helpers/notes.js":"7"},{"size":244,"mtime":1607883119765,"results":"8","hashOfConfig":"9"},{"size":1735,"mtime":1608117855020,"results":"10","hashOfConfig":"9"},{"size":1486,"mtime":1608103210471,"results":"11","hashOfConfig":"9"},{"size":1014,"mtime":1608068399154,"results":"12","hashOfConfig":"9"},{"size":2858,"mtime":1608118089494,"results":"13","hashOfConfig":"9"},{"size":1865,"mtime":1608043834434,"results":"14","hashOfConfig":"9"},{"size":2086,"mtime":1608105063464,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"d2n0ez",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"18"},"/Users/eyahyakhan/Desktop/react/basic-react/basic-react/src/index.js",[],["32","33"],"/Users/eyahyakhan/Desktop/react/basic-react/basic-react/src/App.js",[],"/Users/eyahyakhan/Desktop/react/basic-react/basic-react/src/components/notes.js",[],"/Users/eyahyakhan/Desktop/react/basic-react/basic-react/src/components/List.js",[],"/Users/eyahyakhan/Desktop/react/basic-react/basic-react/src/components/Editor.js",["34"],"/Users/eyahyakhan/Desktop/react/basic-react/basic-react/src/components/localStorage.js",[],"/Users/eyahyakhan/Desktop/react/basic-react/basic-react/src/helpers/notes.js",["35","36"],"function initializeNotes() {\n  // sets localstorage for the first time\n  // sets \"notes\" as key object and convert into array string\n  localStorage.setItem(\"notes\", JSON.stringify([]));\n  // returns an array\n  return [];\n}\n\nexport function getNotes() {\n  //receive all data from local storage as object\n  const notes = localStorage.getItem(\"notes\");\n  //if local storage is empty\n  if (!notes) {\n    notes = initializeNotes();\n  }\n  //convert data into object\n  const parsedNotes = JSON.parse(notes);\n  return parsedNotes;\n}\n\nexport function createNote(title, body) {\n  const notes = getNotes();\n  //adds new items to the end of an array as string\n  const newNote = { title, body };\n  notes.push(newNote);\n  //convert object into array string\n  const jsonNoteArray = JSON.stringify(notes);\n  localStorage.setItem(\"notes\", jsonNoteArray);\n}\n\nexport function moveNote() {\n  const notes = getNotes();\n  const indexToMove = 0;\n  const noteToMove = notes.length > 0 ? notes[indexToMove] : null;\n  notes.splice(indexToMove, 1);\n  notes.splice(notes.length, 0, noteToMove);\n  const jsonNoteArray = JSON.stringify(notes);\n  localStorage.setItem(\"notes\", jsonNoteArray);\n}\n\nexport function updateNote(selectedNote, title, body) {\n  const notes = getNotes();\n  const noteToUpdate = 0;\n  const indexToUpdate =\n    notes.length > 0 ? notes[selectedNote] : notes[noteToUpdate];\n  const note = {\n    title,\n    body,\n  };\n  // remove old note\n  //   notes.splice(indexToUpdate, 1, note);\n  notes.splice(indexToUpdate, 1);\n  // add new note\n  notes.splice(0, 0, note);\n  const jsonNoteArray = JSON.stringify(notes);\n  localStorage.setItem(\"notes\", jsonNoteArray);\n\n  // return notes;\n}\n\nexport function deleteNote() {\n  const notes = getNotes();\n  const indexToDelete = notes.length > 0 ? notes[indexToDelete] : null;\n  // console.log(indexToDelete);\n  // console.log(id);\n  if (indexToDelete >= 0) notes.splice(indexToDelete, 1);\n  //message for last item to delete\n  const listNumber = notes.length;\n  // console.log(listNumber);\n  if (listNumber === 0) alert(\"Last item of list\");\n  return true;\n}\n",{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":22,"column":42,"nodeType":"43","messageId":"44","endLine":22,"endColumn":43},{"ruleId":"45","severity":1,"message":"46","line":14,"column":5,"nodeType":"47","messageId":"48","endLine":14,"endColumn":10},{"ruleId":"49","severity":1,"message":"50","line":63,"column":50,"nodeType":"47","messageId":"51","endLine":63,"endColumn":63},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-const-assign","'notes' is constant.","Identifier","const","no-use-before-define","'indexToDelete' was used before it was defined.","usedBeforeDefined","no-global-assign","no-unsafe-negation"]